# - debug: msg="head_node={{head_node}}"
# - debug: msg="fqdn = {{ ansible_fqdn }}"

#This installs and configures Mariadb
- name: Install MariaDB
  yum: name={{ item }} state=installed
  with_items:
    #- mariadb-pcs
    - mariadb-galera-server
    - mariadb-galera-common
    - mariadb-libs

- name: copy configuration files for MariaDB
  template: src=galera/{{ item }} dest=/etc/{{ item }} owner=root group=root mode=0644 seuser=system_u serole=object_r setype=mysqld_etc_t selevel=s0
  with_items:
    - my.cnf
    - my.cnf.d/client.cnf
    - my.cnf.d/galera.cnf
    - my.cnf.d/mysql-clients.cnf
    - my.cnf.d/server.cnf

# from https://github.com/davidvossel/phd/blob/master/scenarios/galera-basic.scenario
# make sure MariaDB is stopped As pacemaker will manage it
- name: stop mariadb
  service: name=mariadb state=stopped enabled=no

- name: remove databases
  file:  path=/var/lib/mysql/* state=absent

- name: insure /var/lib/mysql is present and owned by mysql
  file: path=/var/lib/mysql/  state=directory owner=mysql group=mysql mode=0644 recurse=yes

- name: remove clustercheck
  file: path=/etc/sysconfig/clustercheck state=absent



- name: create galara resource
  shell: pcs resource create galera galera  wsrep_cluster_address=gcomm://{{node1}},{{node2}},{{node3}}  enable_creation=true   additional_parameters="--open-files-limit=4098"  op promote timeout=300s on-fail=block meta master-max=3 ordered=true --master
  when: ansible_fqdn == "{{node1}}"

- name: create galera VIP
  shell: pcs resource create ip-galera-{{mariadb_vip}} ocf:heartbeat:IPaddr2 ip={{mariadb_vip}} cidr_netmask=32 op monitor interval=30s

- name: set constraints on VIP
  shell: pcs constraint {{ item }}
  with_items:
    - colocation add ip-galera-{{mariadb_vip}} haproxy
    - order start haproxy then start ip-galera-{{mariadb_vip}}
