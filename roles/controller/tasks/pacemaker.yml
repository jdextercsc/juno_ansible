#{% set head_node = hostvars[groups['openstack_controller'][0]] %}
#{% set node1 = hostvars[groups['openstack_controller'][1]] %}
#{% set node2 = hostvars[groups['openstack_controller'][2]] %}
#Install Pacemaker and configure

- name: Install pacemaker
  yum: name={{ item }} state=present
  with_items:
    - pacemaker
#    - cman
    - pcs
    - resource-agents

- name: setup hacluster passwd
  user: name=hacluster comment='pacemkaers user'

- name: create password for hacluster
  shell: echo {{ all_password }} | passwd hacluster --stdin


- name: start pcsd
  service: name pcsd state=started enabled=yes

# setup basic pacemaker
- name: pcs auth
  shell: pcs cluster auth {{[groups['openstack_controller'][0]].ansible_default_ipv4.address}} {{[groups['openstack_controller'][1]].ansible_default_ipv4.address}} {{[groups['openstack_controller'][2]].ansible_default_ipv4.address}} -u halcluster -p password
  when: ansible_default_ipv4.ansible_fqdn = 'controller-1'

- name: create cluster
  #shell: pcs cluster setup --name osp-control-cluster {{[groups['openstack_controller'][0]][ansible_fqdn]}} {{[groups['openstack_controller'][1]][ansible_fqdn]}} {{[groups['openstack_controller'][2]][ansible_fqdn]}}
  shell: pcs cluster setup --name osp-control-cluster {{[groups['openstack_controller'][0]].ansible_default_ipv4.address}} {{[groups['openstack_controller'][1]].ansible_default_ipv4.address}} {{[groups['openstack_controller'][2]].ansible_default_ipv4.address}}  --start
  when: ansible_default_ipv4.ansible_fqdn = 'controller-1'

- name: start cluster
  shell: pcs cluster start
  when: ansible_default_ipv4.ansible_fqdn = 'controller-1'
